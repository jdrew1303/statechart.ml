# OASIS_START
# DO NOT EDIT (digest: 6ac475e73eff49e6bc8330000c98b830)
version = "dev"
description = "Statechart implementation for OCaml"
archive(byte) = "statechart.cma"
archive(byte, plugin) = "statechart.cma"
archive(native) = "statechart.cmxa"
archive(native, plugin) = "statechart.cmxs"
exists_if = "statechart.cma"
package "scxml" (
 version = "dev"
 description = "Statechart implementation for OCaml"
 requires = "statechart markup re re.emacs"
 archive(byte) = "statechart_scxml.cma"
 archive(byte, plugin) = "statechart_scxml.cma"
 archive(native) = "statechart_scxml.cmxa"
 archive(native, plugin) = "statechart_scxml.cmxs"
 exists_if = "statechart_scxml.cma"
)

package "null" (
 version = "dev"
 description = "Statechart implementation for OCaml"
 requires = "statechart"
 archive(byte) = "statechart_null.cma"
 archive(byte, plugin) = "statechart_null.cma"
 archive(native) = "statechart_null.cmxa"
 archive(native, plugin) = "statechart_null.cmxs"
 exists_if = "statechart_null.cma"
)

package "format" (
 version = "dev"
 description = "Statechart implementation for OCaml"
 requires = "statechart"
 archive(byte) = "statechart_format.cma"
 archive(byte, plugin) = "statechart_format.cma"
 archive(native) = "statechart_format.cmxa"
 archive(native, plugin) = "statechart_format.cmxs"
 exists_if = "statechart_format.cma"
)

package "ecmascript" (
 version = "dev"
 description = "Statechart implementation for OCaml"
 requires = "statechart flow_parser"
 archive(byte) = "statechart_ecmascript.cma"
 archive(byte, plugin) = "statechart_ecmascript.cma"
 archive(native) = "statechart_ecmascript.cmxa"
 archive(native, plugin) = "statechart_ecmascript.cmxs"
 exists_if = "statechart_ecmascript.cma"
)
# OASIS_STOP

