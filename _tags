# OASIS_START
# DO NOT EDIT (digest: 26e3c3052174d01bbeec52b861df8cb2)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library statechart
"src/lib/statechart.cmxs": use_statechart
# Library statechart_ecmascript
"src/ecmascript/statechart_ecmascript.cmxs": use_statechart_ecmascript
<src/ecmascript/*.ml{,i,y}>: package(flow_parser)
<src/ecmascript/*.ml{,i,y}>: use_statechart
# Library statechart_format
"src/format/statechart_format.cmxs": use_statechart_format
<src/format/*.ml{,i,y}>: use_statechart
# Library statechart_scxml
"src/scxml/statechart_scxml.cmxs": use_statechart_scxml
<src/scxml/*.ml{,i,y}>: package(markup)
<src/scxml/*.ml{,i,y}>: package(re)
<src/scxml/*.ml{,i,y}>: package(re.emacs)
<src/scxml/*.ml{,i,y}>: use_statechart
# Executable statechart-scxml
<src/scxml_cli/scxml.{native,byte}>: package(cmdliner)
<src/scxml_cli/scxml.{native,byte}>: package(flow_parser)
<src/scxml_cli/scxml.{native,byte}>: package(markup)
<src/scxml_cli/scxml.{native,byte}>: package(re)
<src/scxml_cli/scxml.{native,byte}>: package(re.emacs)
<src/scxml_cli/scxml.{native,byte}>: use_statechart
<src/scxml_cli/scxml.{native,byte}>: use_statechart_ecmascript
<src/scxml_cli/scxml.{native,byte}>: use_statechart_scxml
<src/scxml_cli/*.ml{,i,y}>: package(cmdliner)
<src/scxml_cli/*.ml{,i,y}>: package(flow_parser)
<src/scxml_cli/*.ml{,i,y}>: package(markup)
<src/scxml_cli/*.ml{,i,y}>: package(re)
<src/scxml_cli/*.ml{,i,y}>: package(re.emacs)
<src/scxml_cli/*.ml{,i,y}>: use_statechart
<src/scxml_cli/*.ml{,i,y}>: use_statechart_ecmascript
<src/scxml_cli/*.ml{,i,y}>: use_statechart_scxml
# Executable statechart_js
"src/binding/js_of_ocaml/statechart_js.byte": oasis_executable_statechart_js_byte
<src/binding/js_of_ocaml/*.ml{,i,y}>: oasis_executable_statechart_js_byte
"src/binding/js_of_ocaml/statechart_js.byte": package(flow_parser)
"src/binding/js_of_ocaml/statechart_js.byte": package(js_of_ocaml)
"src/binding/js_of_ocaml/statechart_js.byte": package(js_of_ocaml.ppx)
"src/binding/js_of_ocaml/statechart_js.byte": package(markup)
"src/binding/js_of_ocaml/statechart_js.byte": package(re)
"src/binding/js_of_ocaml/statechart_js.byte": package(re.emacs)
"src/binding/js_of_ocaml/statechart_js.byte": use_statechart
"src/binding/js_of_ocaml/statechart_js.byte": use_statechart_ecmascript
"src/binding/js_of_ocaml/statechart_js.byte": use_statechart_format
"src/binding/js_of_ocaml/statechart_js.byte": use_statechart_scxml
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(flow_parser)
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(js_of_ocaml)
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(js_of_ocaml.ppx)
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(markup)
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(re)
<src/binding/js_of_ocaml/*.ml{,i,y}>: package(re.emacs)
<src/binding/js_of_ocaml/*.ml{,i,y}>: use_statechart
<src/binding/js_of_ocaml/*.ml{,i,y}>: use_statechart_ecmascript
<src/binding/js_of_ocaml/*.ml{,i,y}>: use_statechart_format
<src/binding/js_of_ocaml/*.ml{,i,y}>: use_statechart_scxml
# Executable test_statechart
<test/test_statechart.{native,byte}>: package(alcotest)
<test/test_statechart.{native,byte}>: package(crunch)
<test/test_statechart.{native,byte}>: package(flow_parser)
<test/test_statechart.{native,byte}>: package(markup)
<test/test_statechart.{native,byte}>: package(re)
<test/test_statechart.{native,byte}>: package(re.emacs)
<test/test_statechart.{native,byte}>: use_statechart
<test/test_statechart.{native,byte}>: use_statechart_ecmascript
<test/test_statechart.{native,byte}>: use_statechart_format
<test/test_statechart.{native,byte}>: use_statechart_scxml
<test/*.ml{,i,y}>: package(alcotest)
<test/*.ml{,i,y}>: package(crunch)
<test/*.ml{,i,y}>: package(flow_parser)
<test/*.ml{,i,y}>: package(markup)
<test/*.ml{,i,y}>: package(re)
<test/*.ml{,i,y}>: package(re.emacs)
<test/*.ml{,i,y}>: use_statechart
<test/*.ml{,i,y}>: use_statechart_ecmascript
<test/*.ml{,i,y}>: use_statechart_format
<test/*.ml{,i,y}>: use_statechart_scxml
# OASIS_STOP
"lib": -traverse
"lib": not_hygienic
"node_modules": -traverse
"node_modules": not_hygienic
"vendor": -traverse
"vendor": not_hygienic
