# OASIS_START
# DO NOT EDIT (digest: b47aa9116aa3add8091d6c8ba8c3b8a7)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library statechart
"src/lib/statechart.cmxs": use_statechart
# Library statechart_datamodel
"src/datamodel/statechart_datamodel.cmxs": use_statechart_datamodel
<src/datamodel/*.ml{,i,y}>: use_statechart
# Library statechart_analyzer
"src/analyzer/statechart_analyzer.cmxs": use_statechart_analyzer
<src/analyzer/*.ml{,i,y}>: use_statechart
<src/analyzer/*.ml{,i,y}>: use_statechart_datamodel
# Library statechart_datamodel_ecmascript
"src/datamodel/ecmascript/statechart_datamodel_ecmascript.cmxs": use_statechart_datamodel_ecmascript
<src/datamodel/ecmascript/*.ml{,i,y}>: package(flow_parser)
<src/datamodel/ecmascript/*.ml{,i,y}>: use_statechart
<src/datamodel/ecmascript/*.ml{,i,y}>: use_statechart_datamodel
# Library statechart_interpreter
"src/interpreter/statechart_interpreter.cmxs": use_statechart_interpreter
<src/interpreter/*.ml{,i,y}>: use_statechart
# Library statechart_translator
"src/translator/statechart_translator.cmxs": use_statechart_translator
<src/translator/*.ml{,i,y}>: use_statechart
<src/translator/*.ml{,i,y}>: use_statechart_analyzer
<src/translator/*.ml{,i,y}>: use_statechart_datamodel
# Library statechart_scxml
"src/scxml/statechart_scxml.cmxs": use_statechart_scxml
<src/scxml/*.ml{,i,y}>: package(humane_re)
<src/scxml/*.ml{,i,y}>: package(markup)
<src/scxml/*.ml{,i,y}>: use_statechart
<src/scxml/*.ml{,i,y}>: use_statechart_analyzer
<src/scxml/*.ml{,i,y}>: use_statechart_datamodel
# Executable statechart-scxml
<src/scxml_cli/scxml.{native,byte}>: package(cmdliner)
<src/scxml_cli/scxml.{native,byte}>: package(humane_re)
<src/scxml_cli/scxml.{native,byte}>: package(markup)
<src/scxml_cli/scxml.{native,byte}>: use_statechart
<src/scxml_cli/scxml.{native,byte}>: use_statechart_analyzer
<src/scxml_cli/scxml.{native,byte}>: use_statechart_datamodel
<src/scxml_cli/scxml.{native,byte}>: use_statechart_scxml
<src/scxml_cli/*.ml{,i,y}>: package(cmdliner)
<src/scxml_cli/*.ml{,i,y}>: package(humane_re)
<src/scxml_cli/*.ml{,i,y}>: package(markup)
<src/scxml_cli/*.ml{,i,y}>: use_statechart
<src/scxml_cli/*.ml{,i,y}>: use_statechart_analyzer
<src/scxml_cli/*.ml{,i,y}>: use_statechart_datamodel
<src/scxml_cli/*.ml{,i,y}>: use_statechart_scxml
# Executable test_statechart
<test/test_statechart.{native,byte}>: package(alcotest)
<test/test_statechart.{native,byte}>: package(crunch)
<test/test_statechart.{native,byte}>: package(flow_parser)
<test/test_statechart.{native,byte}>: package(humane_re)
<test/test_statechart.{native,byte}>: package(markup)
<test/test_statechart.{native,byte}>: use_statechart
<test/test_statechart.{native,byte}>: use_statechart_analyzer
<test/test_statechart.{native,byte}>: use_statechart_datamodel
<test/test_statechart.{native,byte}>: use_statechart_datamodel_ecmascript
<test/test_statechart.{native,byte}>: use_statechart_interpreter
<test/test_statechart.{native,byte}>: use_statechart_scxml
<test/test_statechart.{native,byte}>: use_statechart_translator
<test/*.ml{,i,y}>: package(alcotest)
<test/*.ml{,i,y}>: package(crunch)
<test/*.ml{,i,y}>: package(flow_parser)
<test/*.ml{,i,y}>: package(humane_re)
<test/*.ml{,i,y}>: package(markup)
<test/*.ml{,i,y}>: use_statechart
<test/*.ml{,i,y}>: use_statechart_analyzer
<test/*.ml{,i,y}>: use_statechart_datamodel
<test/*.ml{,i,y}>: use_statechart_datamodel_ecmascript
<test/*.ml{,i,y}>: use_statechart_interpreter
<test/*.ml{,i,y}>: use_statechart_scxml
<test/*.ml{,i,y}>: use_statechart_translator
# OASIS_STOP
"lib": -traverse
"lib": not_hygienic
"node_modules": -traverse
"node_modules": not_hygienic
